{"version":3,"sources":["List.js","Alert.js","App.js","index.js"],"names":["List","list","filter","removeItem","onCheck","onEdit","map","item","className","completed","value","onClick","id","Alert","msg","type","showAlert","useEffect","setTimeout","clearTimeout","getLocalStorage","localStorage","getItem","JSON","parse","App","useState","setValue","setList","isEdit","setIsEdit","editId","setEditId","status","setStatus","setFilter","show","alert","setAlert","setItem","stringify","filterHandler","console","log","onSubmit","e","preventDefault","Date","getTime","toString","placeholder","onChange","target","newItem","specificItem","find","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.27c7a207.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { FaTrashAlt } from \"react-icons/fa\";\r\nimport { BiMessageSquareCheck } from \"react-icons/bi\";\r\nimport { FiEdit } from \"react-icons/fi\";\r\nconst List = ({ list, filter, removeItem, onCheck, onEdit }) => {\r\n  return (\r\n    <>\r\n      {filter.map((item) => {\r\n        return (\r\n          <div\r\n            className={`list-container ${item.completed ? \"completed-bg\" : \"\"}`}\r\n            key={item.id}\r\n          >\r\n            <div className=\"list-content\">\r\n              <div className=\"list\">\r\n                <p className={`name ${item.completed ? \"completed\" : \"\"} `}>\r\n                  {item.value}\r\n                </p>\r\n                <div className=\"icons\">\r\n                  <button\r\n                    className=\"icon-btn\"\r\n                    onClick={() => removeItem(item.id)}\r\n                  >\r\n                    <FaTrashAlt className=\"icon\" />\r\n                  </button>\r\n                  <button className=\"icon-btn\">\r\n                    <BiMessageSquareCheck\r\n                      className=\"icon\"\r\n                      onClick={() => onCheck(item.id)}\r\n                    />\r\n                  </button>\r\n                  <button className=\"icon-btn\">\r\n                    <FiEdit className=\"icon\" onClick={() => onEdit(item.id)} />\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default List;\r\n","import React, { useEffect } from \"react\";\r\n\r\nconst Alert = ({ msg, type, showAlert, list }) => {\r\n  useEffect(() => {\r\n    setTimeout(() => showAlert(), 3000);\r\n    return function () {\r\n      clearTimeout(() => showAlert());\r\n    };\r\n  }, [list]);\r\n  return <p className={`alert alert-${type}`}>{msg}</p>;\r\n};\r\n\r\nexport default Alert;\r\n","import React, { useState, useEffect } from \"react\";\nimport \"./index.css\";\nimport List from \"./List\";\n\nimport Alert from \"./Alert\";\n\nconst getLocalStorage = () => {\n  let list = localStorage.getItem(\"list\");\n  if (list) {\n    return JSON.parse(localStorage.getItem(\"list\"));\n  } else {\n    return [];\n  }\n};\n\nfunction App() {\n  const [value, setValue] = useState(\"\");\n  const [list, setList] = useState(getLocalStorage);\n  const [isEdit, setIsEdit] = useState(false); //for editing\n  const [editId, setEditId] = useState(null);\n  const [status, setStatus] = useState(\"all\");\n  const [filter, setFilter] = useState([]); // for filtering\n  const [alert, setAlert] = useState({\n    show: false,\n    msg: \"\",\n    type: \"\",\n  });\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (!value) {\n      // alert\n      showAlert(true, \"danger\", \"Please enter value\");\n    } else if (value && isEdit) {\n      // deal with edit\n      setList(\n        list.map((item) => {\n          if (item.id === editId) {\n            return { ...item, value };\n          }\n          return item;\n        })\n      );\n      setValue(\"\");\n      setEditId(null);\n      setIsEdit(false);\n      showAlert(true, \"success\", \"value changed\");\n    } else {\n      // adding items to the list\n      showAlert(true, \"success\", \"Item added to the list\");\n      setList([...list, { value, id: new Date().getTime().toString() }]);\n      setValue(\"\");\n    }\n  };\n  const showAlert = (show = false, type = \"\", msg = \"\") => {\n    setAlert({ show, type, msg });\n  };\n\n  // delete button\n  const clearAll = () => {\n    showAlert(true, \"danger\", \"List is empty\");\n    setList([]);\n  };\n  const removeItem = (id) => {\n    showAlert(true, \"danger\", \"Item is deleted\");\n    const newItem = list.filter((item) => item.id !== id);\n    setList(newItem);\n  };\n  const onCheck = (id) => {\n    // showAlert(true, \"success\", \"todo completed\");\n    setList(\n      list.map((item) => {\n        if (item.id === id) {\n          return { ...item, completed: !item.completed };\n        }\n        return item;\n      })\n    );\n  };\n  const onEdit = (id) => {\n    const specificItem = list.find((item) => item.id === id);\n    setIsEdit(true);\n    setEditId(id);\n    setValue(specificItem.value);\n  };\n  const statusHandler = (e) => {\n    console.log(e.target.value);\n    setStatus(e.target.value);\n  };\n  const filterHandler = () => {\n    switch (status) {\n      case \"Выполненные\":\n        setFilter(list.filter((item) => item.completed === true));\n        break;\n      case \"Невыполненные\":\n        setFilter(list.filter((item) => item.completed === false));\n        break;\n      default:\n        setFilter(list);\n        break;\n    }\n  };\n  // store to localStorage\n  useEffect(() => {\n    localStorage.setItem(\"list\", JSON.stringify(list));\n  }, [list]);\n  useEffect(() => {\n    filterHandler();\n    console.log(\"evw\");\n  }, [list, status]);\n  return (\n    <div className=\"container\">\n      <div className=\"inner-container\">\n        <h1 className=\"title\">Ernazar's TODO List</h1>\n        <div className=\"form-container\">\n          <form className=\"form\" onSubmit={handleSubmit}>\n            {alert.show && (\n              <Alert {...alert} list={list} showAlert={showAlert} />\n            )}\n            <div className=\"content\">\n              <input\n                type=\"text\"\n                className=\"input\"\n                value={value}\n                placeholder=\"Type something ...\"\n                onChange={(e) => setValue(e.target.value)}\n              />\n              <select className=\"select\" onChange={statusHandler}>\n                <option>All</option>\n                <option>Выполненные</option>\n                <option>Невыполненные</option>\n              </select>\n              <button className=\"btn \">{isEdit ? \"Edit\" : \"Submit\"}</button>\n            </div>\n          </form>\n        </div>\n        <div className=\"list-items\">\n          <List\n            list={list}\n            removeItem={removeItem}\n            onCheck={onCheck}\n            onEdit={onEdit}\n            filter={filter}\n          />\n          {list.length > 0 && (\n            <div className=\"clear\" onClick={clearAll}>\n              clear\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}